openapi: 3.0.0
info:
  title: driport_backend
  version: 1.0.0
servers:
  - url: http://{{url}}
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    undefinedAuth:
      type: http
tags:
  - name: admin
    description: admin APIs
  - name: admin > reports
    description: reports Model APIs
  - name: admin > File Upload
    description: Upload Files
  - name: admin > vehicles
    description: vehicles Model APIs
  - name: admin > companies
    description: companies Model APIs
  - name: admin > conversations
    description: conversations Model APIs
  - name: admin > drivers
    description: drivers Model APIs
  - name: admin > users
    description: users Model APIs
  - name: admin > login
    description: admin Login
  - name: admin > role
    description: role Model APIs
  - name: admin > projectRoute
    description: projectRoute Model APIs
  - name: admin > routeRole
    description: routeRole Model APIs
  - name: admin > userRole
    description: userRole Model APIs
  - name: client
    description: client APIs
  - name: client > reports
    description: reports Model APIs
  - name: client > File Upload
    description: Upload Files
  - name: client > vehicles
    description: vehicles Model APIs
  - name: client > companies
    description: companies Model APIs
  - name: client > conversations
    description: conversations Model APIs
  - name: client > drivers
    description: drivers Model APIs
  - name: client > users
    description: users Model APIs
  - name: client > login
    description: client Login
paths:
  /admin/reports/{id}:
    get:
      tags:
        - admin > reports
      summary: getreports
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  conversationId: 64caf403f905eb2e7c1e26e7
                  profileName: Singapore
                  userPhone: neutral
                  description: Mexico
                  reportType: Plastic
                  media: invoice
                  evidenceID: Pants
                  plate: Gorgeous
                  date: '2024-05-12T09:38:44.869Z'
                  riskMatrix: 513
                  count: 531
                  driverId: 64caf403f905eb2e7c1e26e8
                  vehicleId: 64caf403f905eb2e7c1e26e9
                  companyId: 64caf403f905eb2e7c1e26ea
                  address: 40177 Stamm Forges
                  id: 64caf403f905eb2e7c1e26ef
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-10-14T20:10:23.748Z'
                  updatedAt: '2024-07-06T04:58:13.570Z'
  /admin/reports/create:
    post:
      tags:
        - admin > reports
      summary: addreports
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                conversationId: 64caf403f905eb2e7c1e26e7
                profileName: Singapore
                userPhone: neutral
                description: Mexico
                reportType: Plastic
                media: invoice
                evidenceID: Pants
                plate: Gorgeous
                date: '2024-05-12T09:38:44.869Z'
                riskMatrix: 513
                count: 531
                driverId: 64caf403f905eb2e7c1e26e8
                vehicleId: 64caf403f905eb2e7c1e26e9
                companyId: 64caf403f905eb2e7c1e26ea
                address: 40177 Stamm Forges
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  conversationId: 64caf403f905eb2e7c1e26e7
                  profileName: Singapore
                  userPhone: neutral
                  description: Mexico
                  reportType: Plastic
                  media: invoice
                  evidenceID: Pants
                  plate: Gorgeous
                  date: '2024-05-12T09:38:44.869Z'
                  riskMatrix: 513
                  count: 531
                  driverId: 64caf403f905eb2e7c1e26e8
                  vehicleId: 64caf403f905eb2e7c1e26e9
                  companyId: 64caf403f905eb2e7c1e26ea
                  address: 40177 Stamm Forges
                  id: 64caf403f905eb2e7c1e26ec
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-10-14T20:10:23.748Z'
                  updatedAt: '2024-07-06T04:58:13.570Z'
  /admin/reports/addBulk:
    post:
      tags:
        - admin > reports
      summary: insertBulkreports
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - conversationId: 64caf403f905eb2e7c1e26e7
                    profileName: Singapore
                    userPhone: neutral
                    description: Mexico
                    reportType: Plastic
                    media: invoice
                    evidenceID: Pants
                    plate: Gorgeous
                    date: '2024-05-12T09:38:44.869Z'
                    riskMatrix: 513
                    count: 531
                    driverId: 64caf403f905eb2e7c1e26e8
                    vehicleId: 64caf403f905eb2e7c1e26e9
                    companyId: 64caf403f905eb2e7c1e26ea
                    address: 40177 Stamm Forges
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/reports/list:
    post:
      tags:
        - admin > reports
      summary: findAllreports
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - conversationId: 64caf403f905eb2e7c1e26e7
                      profileName: Singapore
                      userPhone: neutral
                      description: Mexico
                      reportType: Plastic
                      media: invoice
                      evidenceID: Pants
                      plate: Gorgeous
                      date: '2024-05-12T09:38:44.869Z'
                      riskMatrix: 513
                      count: 531
                      driverId: 64caf403f905eb2e7c1e26e8
                      vehicleId: 64caf403f905eb2e7c1e26e9
                      companyId: 64caf403f905eb2e7c1e26ea
                      address: 40177 Stamm Forges
                      id: 64caf403f905eb2e7c1e26ee
                      isDeleted: false
                      isActive: true
                      createdAt: '2023-10-14T20:10:23.748Z'
                      updatedAt: '2024-07-06T04:58:13.570Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /admin/reports/count:
    post:
      tags:
        - admin > reports
      summary: getreportsCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /admin/reports/deleteMany:
    post:
      tags:
        - admin > reports
      summary: deleteManyreports
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/reports/update/{id}:
    put:
      tags:
        - admin > reports
      summary: updatereports
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                conversationId: 64caf403f905eb2e7c1e26e7
                profileName: Singapore
                userPhone: neutral
                description: Mexico
                reportType: Plastic
                media: invoice
                evidenceID: Pants
                plate: Gorgeous
                date: '2024-05-12T09:38:44.869Z'
                riskMatrix: 513
                count: 531
                driverId: 64caf403f905eb2e7c1e26e8
                vehicleId: 64caf403f905eb2e7c1e26e9
                companyId: 64caf403f905eb2e7c1e26ea
                address: 40177 Stamm Forges
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  conversationId: 64caf403f905eb2e7c1e26e7
                  profileName: Singapore
                  userPhone: neutral
                  description: Mexico
                  reportType: Plastic
                  media: invoice
                  evidenceID: Pants
                  plate: Gorgeous
                  date: '2024-05-12T09:38:44.869Z'
                  riskMatrix: 513
                  count: 531
                  driverId: 64caf403f905eb2e7c1e26e8
                  vehicleId: 64caf403f905eb2e7c1e26e9
                  companyId: 64caf403f905eb2e7c1e26ea
                  address: 40177 Stamm Forges
                  id: 64caf403f905eb2e7c1e26f0
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-10-14T20:10:23.748Z'
                  updatedAt: '2024-07-06T04:58:13.570Z'
  /admin/reports/partial-update/{id}:
    put:
      tags:
        - admin > reports
      summary: partialupdatereports
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  conversationId: 64caf403f905eb2e7c1e26e7
                  profileName: Singapore
                  userPhone: neutral
                  description: Mexico
                  reportType: Plastic
                  media: invoice
                  evidenceID: Pants
                  plate: Gorgeous
                  date: '2024-05-12T09:38:44.869Z'
                  riskMatrix: 513
                  count: 531
                  driverId: 64caf403f905eb2e7c1e26e8
                  vehicleId: 64caf403f905eb2e7c1e26e9
                  companyId: 64caf403f905eb2e7c1e26ea
                  address: 40177 Stamm Forges
                  id: 64caf403f905eb2e7c1e26f1
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-10-14T20:10:23.748Z'
                  updatedAt: '2024-07-06T04:58:13.570Z'
  /admin/reports/updateBulk:
    put:
      tags:
        - admin > reports
      summary: updateBulkreports
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/reports/softDelete/{id}:
    put:
      tags:
        - admin > reports
      summary: softDeletereports
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/reports/softDeleteMany:
    put:
      tags:
        - admin > reports
      summary: softDeleteManyreports
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/reports/delete/{id}:
    delete:
      tags:
        - admin > reports
      summary: deletereports
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /admin/upload:
    post:
      tags:
        - admin > File Upload
      summary: File upload in admin
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: string
                  description: Select file/s to upload
                  format: binary
                folder:
                  type: string
                  description: Optional, enable to upload file to specific folder
                  example: Enter foldername
                fileName:
                  type: string
                  description: Optional, enable to give Specific file name to uploaded File
                  example: Enter fileName
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  - status: true
                    path: path to download file
  /admin/vehicles/{id}:
    get:
      tags:
        - admin > vehicles
      summary: getvehicles
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  brand: Avon
                  model: Granite
                  year: 545
                  color: green
                  plate: Alley
                  vin: override
                  stickerID: Plain
                  companyId: 64caf403f905eb2e7c1e26f5
                  driverId: 64caf403f905eb2e7c1e26f6
                  id: 64caf403f905eb2e7c1e26fb
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-08-03T17:42:05.257Z'
                  updatedAt: '2023-11-28T12:31:20.371Z'
  /admin/vehicles/create:
    post:
      tags:
        - admin > vehicles
      summary: addvehicles
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                brand: Avon
                model: Granite
                year: 545
                color: green
                plate: Alley
                vin: override
                stickerID: Plain
                companyId: 64caf403f905eb2e7c1e26f5
                driverId: 64caf403f905eb2e7c1e26f6
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  brand: Avon
                  model: Granite
                  year: 545
                  color: green
                  plate: Alley
                  vin: override
                  stickerID: Plain
                  companyId: 64caf403f905eb2e7c1e26f5
                  driverId: 64caf403f905eb2e7c1e26f6
                  id: 64caf403f905eb2e7c1e26f8
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-08-03T17:42:05.257Z'
                  updatedAt: '2023-11-28T12:31:20.371Z'
  /admin/vehicles/addBulk:
    post:
      tags:
        - admin > vehicles
      summary: insertBulkvehicles
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - brand: Avon
                    model: Granite
                    year: 545
                    color: green
                    plate: Alley
                    vin: override
                    stickerID: Plain
                    companyId: 64caf403f905eb2e7c1e26f5
                    driverId: 64caf403f905eb2e7c1e26f6
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/vehicles/list:
    post:
      tags:
        - admin > vehicles
      summary: findAllvehicles
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - brand: Avon
                      model: Granite
                      year: 545
                      color: green
                      plate: Alley
                      vin: override
                      stickerID: Plain
                      companyId: 64caf403f905eb2e7c1e26f5
                      driverId: 64caf403f905eb2e7c1e26f6
                      id: 64caf403f905eb2e7c1e26fa
                      isDeleted: false
                      isActive: true
                      createdAt: '2023-08-03T17:42:05.257Z'
                      updatedAt: '2023-11-28T12:31:20.371Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /admin/vehicles/count:
    post:
      tags:
        - admin > vehicles
      summary: getvehiclesCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /admin/vehicles/deleteMany:
    post:
      tags:
        - admin > vehicles
      summary: deleteManyvehicles
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/vehicles/update/{id}:
    put:
      tags:
        - admin > vehicles
      summary: updatevehicles
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                brand: Avon
                model: Granite
                year: 545
                color: green
                plate: Alley
                vin: override
                stickerID: Plain
                companyId: 64caf403f905eb2e7c1e26f5
                driverId: 64caf403f905eb2e7c1e26f6
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  brand: Avon
                  model: Granite
                  year: 545
                  color: green
                  plate: Alley
                  vin: override
                  stickerID: Plain
                  companyId: 64caf403f905eb2e7c1e26f5
                  driverId: 64caf403f905eb2e7c1e26f6
                  id: 64caf403f905eb2e7c1e26fc
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-08-03T17:42:05.257Z'
                  updatedAt: '2023-11-28T12:31:20.371Z'
  /admin/vehicles/partial-update/{id}:
    put:
      tags:
        - admin > vehicles
      summary: partialupdatevehicles
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  brand: Avon
                  model: Granite
                  year: 545
                  color: green
                  plate: Alley
                  vin: override
                  stickerID: Plain
                  companyId: 64caf403f905eb2e7c1e26f5
                  driverId: 64caf403f905eb2e7c1e26f6
                  id: 64caf403f905eb2e7c1e26fd
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-08-03T17:42:05.257Z'
                  updatedAt: '2023-11-28T12:31:20.371Z'
  /admin/vehicles/updateBulk:
    put:
      tags:
        - admin > vehicles
      summary: updateBulkvehicles
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/vehicles/softDelete/{id}:
    put:
      tags:
        - admin > vehicles
      summary: softDeletevehicles
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/vehicles/softDeleteMany:
    put:
      tags:
        - admin > vehicles
      summary: softDeleteManyvehicles
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/vehicles/delete/{id}:
    delete:
      tags:
        - admin > vehicles
      summary: deletevehicles
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /admin/companies/{id}:
    get:
      tags:
        - admin > companies
      summary: getcompanies
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  companyName: optical
                  registrationNumber: maroon
                  email: Jan88@gmail.com
                  phone: (545) 937-0777
                  website: optical
                  address: 5496 Ulices Burgs
                  otherData: Concrete
                  userId: 64caf403f905eb2e7c1e2706
                  id: 64caf403f905eb2e7c1e270b
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-12-12T13:22:07.555Z'
                  updatedAt: '2024-06-06T03:20:04.304Z'
  /admin/companies/create:
    post:
      tags:
        - admin > companies
      summary: addcompanies
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                companyName: optical
                registrationNumber: maroon
                email: Jan88@gmail.com
                phone: (545) 937-0777
                website: optical
                address: 5496 Ulices Burgs
                otherData: Concrete
                userId: 64caf403f905eb2e7c1e2706
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  companyName: optical
                  registrationNumber: maroon
                  email: Jan88@gmail.com
                  phone: (545) 937-0777
                  website: optical
                  address: 5496 Ulices Burgs
                  otherData: Concrete
                  userId: 64caf403f905eb2e7c1e2706
                  id: 64caf403f905eb2e7c1e2708
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-12-12T13:22:07.555Z'
                  updatedAt: '2024-06-06T03:20:04.304Z'
  /admin/companies/addBulk:
    post:
      tags:
        - admin > companies
      summary: insertBulkcompanies
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - companyName: optical
                    registrationNumber: maroon
                    email: Jan88@gmail.com
                    phone: (545) 937-0777
                    website: optical
                    address: 5496 Ulices Burgs
                    otherData: Concrete
                    userId: 64caf403f905eb2e7c1e2706
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/companies/list:
    post:
      tags:
        - admin > companies
      summary: findAllcompanies
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - companyName: optical
                      registrationNumber: maroon
                      email: Jan88@gmail.com
                      phone: (545) 937-0777
                      website: optical
                      address: 5496 Ulices Burgs
                      otherData: Concrete
                      userId: 64caf403f905eb2e7c1e2706
                      id: 64caf403f905eb2e7c1e270a
                      isDeleted: false
                      isActive: true
                      createdAt: '2023-12-12T13:22:07.555Z'
                      updatedAt: '2024-06-06T03:20:04.304Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /admin/companies/count:
    post:
      tags:
        - admin > companies
      summary: getcompaniesCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /admin/companies/deleteMany:
    post:
      tags:
        - admin > companies
      summary: deleteManycompanies
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/companies/update/{id}:
    put:
      tags:
        - admin > companies
      summary: updatecompanies
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                companyName: optical
                registrationNumber: maroon
                email: Jan88@gmail.com
                phone: (545) 937-0777
                website: optical
                address: 5496 Ulices Burgs
                otherData: Concrete
                userId: 64caf403f905eb2e7c1e2706
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  companyName: optical
                  registrationNumber: maroon
                  email: Jan88@gmail.com
                  phone: (545) 937-0777
                  website: optical
                  address: 5496 Ulices Burgs
                  otherData: Concrete
                  userId: 64caf403f905eb2e7c1e2706
                  id: 64caf403f905eb2e7c1e270c
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-12-12T13:22:07.555Z'
                  updatedAt: '2024-06-06T03:20:04.304Z'
  /admin/companies/partial-update/{id}:
    put:
      tags:
        - admin > companies
      summary: partialupdatecompanies
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  companyName: optical
                  registrationNumber: maroon
                  email: Jan88@gmail.com
                  phone: (545) 937-0777
                  website: optical
                  address: 5496 Ulices Burgs
                  otherData: Concrete
                  userId: 64caf403f905eb2e7c1e2706
                  id: 64caf403f905eb2e7c1e270d
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-12-12T13:22:07.555Z'
                  updatedAt: '2024-06-06T03:20:04.304Z'
  /admin/companies/updateBulk:
    put:
      tags:
        - admin > companies
      summary: updateBulkcompanies
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/companies/softDelete/{id}:
    put:
      tags:
        - admin > companies
      summary: softDeletecompanies
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/companies/softDeleteMany:
    put:
      tags:
        - admin > companies
      summary: softDeleteManycompanies
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/companies/delete/{id}:
    delete:
      tags:
        - admin > companies
      summary: deletecompanies
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /admin/conversations/{id}:
    get:
      tags:
        - admin > conversations
      summary: getconversations
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  sender: Planner
                  profileName: Bolivar
                  step: 917
                  isCompleted: false
                  companyId: 64caf403f905eb2e7c1e2716
                  id: 64caf403f905eb2e7c1e271b
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-07-20T11:21:57.726Z'
                  updatedAt: '2024-06-14T14:47:10.870Z'
  /admin/conversations/create:
    post:
      tags:
        - admin > conversations
      summary: addconversations
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                sender: Planner
                profileName: Bolivar
                step: 917
                isCompleted: false
                companyId: 64caf403f905eb2e7c1e2716
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  sender: Planner
                  profileName: Bolivar
                  step: 917
                  isCompleted: false
                  companyId: 64caf403f905eb2e7c1e2716
                  id: 64caf403f905eb2e7c1e2718
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-07-20T11:21:57.726Z'
                  updatedAt: '2024-06-14T14:47:10.870Z'
  /admin/conversations/addBulk:
    post:
      tags:
        - admin > conversations
      summary: insertBulkconversations
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - sender: Planner
                    profileName: Bolivar
                    step: 917
                    isCompleted: false
                    companyId: 64caf403f905eb2e7c1e2716
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/conversations/list:
    post:
      tags:
        - admin > conversations
      summary: findAllconversations
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - sender: Planner
                      profileName: Bolivar
                      step: 917
                      isCompleted: false
                      companyId: 64caf403f905eb2e7c1e2716
                      id: 64caf403f905eb2e7c1e271a
                      isDeleted: false
                      isActive: true
                      createdAt: '2024-07-20T11:21:57.726Z'
                      updatedAt: '2024-06-14T14:47:10.870Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /admin/conversations/count:
    post:
      tags:
        - admin > conversations
      summary: getconversationsCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /admin/conversations/deleteMany:
    post:
      tags:
        - admin > conversations
      summary: deleteManyconversations
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/conversations/update/{id}:
    put:
      tags:
        - admin > conversations
      summary: updateconversations
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                sender: Planner
                profileName: Bolivar
                step: 917
                isCompleted: false
                companyId: 64caf403f905eb2e7c1e2716
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  sender: Planner
                  profileName: Bolivar
                  step: 917
                  isCompleted: false
                  companyId: 64caf403f905eb2e7c1e2716
                  id: 64caf403f905eb2e7c1e271c
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-07-20T11:21:57.726Z'
                  updatedAt: '2024-06-14T14:47:10.870Z'
  /admin/conversations/partial-update/{id}:
    put:
      tags:
        - admin > conversations
      summary: partialupdateconversations
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  sender: Planner
                  profileName: Bolivar
                  step: 917
                  isCompleted: false
                  companyId: 64caf403f905eb2e7c1e2716
                  id: 64caf403f905eb2e7c1e271d
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-07-20T11:21:57.726Z'
                  updatedAt: '2024-06-14T14:47:10.870Z'
  /admin/conversations/updateBulk:
    put:
      tags:
        - admin > conversations
      summary: updateBulkconversations
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/conversations/softDelete/{id}:
    put:
      tags:
        - admin > conversations
      summary: softDeleteconversations
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/conversations/softDeleteMany:
    put:
      tags:
        - admin > conversations
      summary: softDeleteManyconversations
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/conversations/delete/{id}:
    delete:
      tags:
        - admin > conversations
      summary: deleteconversations
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /admin/drivers/{id}:
    get:
      tags:
        - admin > drivers
      summary: getdrivers
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  driverId: Wyoming
                  name: Brett Bartoletti V
                  age: 11
                  licenseNumber: Officer
                  riskMatrix: 9
                  vehicleId: 64caf403f905eb2e7c1e2721
                  companyId: 64caf403f905eb2e7c1e2722
                  birthDate: '2024-04-09T21:56:25.031Z'
                  licenseExpiration: '2024-03-18T08:26:34.944Z'
                  id: 64caf403f905eb2e7c1e2727
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-07-28T10:45:11.406Z'
                  updatedAt: '2024-06-06T05:06:16.870Z'
  /admin/drivers/create:
    post:
      tags:
        - admin > drivers
      summary: adddrivers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                driverId: Wyoming
                name: Brett Bartoletti V
                age: 11
                licenseNumber: Officer
                riskMatrix: 9
                vehicleId: 64caf403f905eb2e7c1e2721
                companyId: 64caf403f905eb2e7c1e2722
                birthDate: '2024-04-09T21:56:25.031Z'
                licenseExpiration: '2024-03-18T08:26:34.944Z'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  driverId: Wyoming
                  name: Brett Bartoletti V
                  age: 11
                  licenseNumber: Officer
                  riskMatrix: 9
                  vehicleId: 64caf403f905eb2e7c1e2721
                  companyId: 64caf403f905eb2e7c1e2722
                  birthDate: '2024-04-09T21:56:25.031Z'
                  licenseExpiration: '2024-03-18T08:26:34.944Z'
                  id: 64caf403f905eb2e7c1e2724
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-07-28T10:45:11.406Z'
                  updatedAt: '2024-06-06T05:06:16.870Z'
  /admin/drivers/addBulk:
    post:
      tags:
        - admin > drivers
      summary: insertBulkdrivers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - driverId: Wyoming
                    name: Brett Bartoletti V
                    age: 11
                    licenseNumber: Officer
                    riskMatrix: 9
                    vehicleId: 64caf403f905eb2e7c1e2721
                    companyId: 64caf403f905eb2e7c1e2722
                    birthDate: '2024-04-09T21:56:25.031Z'
                    licenseExpiration: '2024-03-18T08:26:34.944Z'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/drivers/list:
    post:
      tags:
        - admin > drivers
      summary: findAlldrivers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - driverId: Wyoming
                      name: Brett Bartoletti V
                      age: 11
                      licenseNumber: Officer
                      riskMatrix: 9
                      vehicleId: 64caf403f905eb2e7c1e2721
                      companyId: 64caf403f905eb2e7c1e2722
                      birthDate: '2024-04-09T21:56:25.031Z'
                      licenseExpiration: '2024-03-18T08:26:34.944Z'
                      id: 64caf403f905eb2e7c1e2726
                      isDeleted: false
                      isActive: true
                      createdAt: '2024-07-28T10:45:11.406Z'
                      updatedAt: '2024-06-06T05:06:16.870Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /admin/drivers/count:
    post:
      tags:
        - admin > drivers
      summary: getdriversCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /admin/drivers/deleteMany:
    post:
      tags:
        - admin > drivers
      summary: deleteManydrivers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/drivers/update/{id}:
    put:
      tags:
        - admin > drivers
      summary: updatedrivers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                driverId: Wyoming
                name: Brett Bartoletti V
                age: 11
                licenseNumber: Officer
                riskMatrix: 9
                vehicleId: 64caf403f905eb2e7c1e2721
                companyId: 64caf403f905eb2e7c1e2722
                birthDate: '2024-04-09T21:56:25.031Z'
                licenseExpiration: '2024-03-18T08:26:34.944Z'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  driverId: Wyoming
                  name: Brett Bartoletti V
                  age: 11
                  licenseNumber: Officer
                  riskMatrix: 9
                  vehicleId: 64caf403f905eb2e7c1e2721
                  companyId: 64caf403f905eb2e7c1e2722
                  birthDate: '2024-04-09T21:56:25.031Z'
                  licenseExpiration: '2024-03-18T08:26:34.944Z'
                  id: 64caf403f905eb2e7c1e2728
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-07-28T10:45:11.406Z'
                  updatedAt: '2024-06-06T05:06:16.870Z'
  /admin/drivers/partial-update/{id}:
    put:
      tags:
        - admin > drivers
      summary: partialupdatedrivers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  driverId: Wyoming
                  name: Brett Bartoletti V
                  age: 11
                  licenseNumber: Officer
                  riskMatrix: 9
                  vehicleId: 64caf403f905eb2e7c1e2721
                  companyId: 64caf403f905eb2e7c1e2722
                  birthDate: '2024-04-09T21:56:25.031Z'
                  licenseExpiration: '2024-03-18T08:26:34.944Z'
                  id: 64caf403f905eb2e7c1e2729
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-07-28T10:45:11.406Z'
                  updatedAt: '2024-06-06T05:06:16.870Z'
  /admin/drivers/updateBulk:
    put:
      tags:
        - admin > drivers
      summary: updateBulkdrivers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/drivers/softDelete/{id}:
    put:
      tags:
        - admin > drivers
      summary: softDeletedrivers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/drivers/softDeleteMany:
    put:
      tags:
        - admin > drivers
      summary: softDeleteManydrivers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/drivers/delete/{id}:
    delete:
      tags:
        - admin > drivers
      summary: deletedrivers
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /admin/users/{id}:
    get:
      tags:
        - admin > users
      summary: getusers
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Todd Stroman
                  email: Sarina72@yahoo.com
                  role: indexing
                  companyId: 64caf403f905eb2e7c1e2732
                  mobileNo: (773) 264-7502
                  username: Ila.Labadie
                  userType: 1
                  id: 64caf403f905eb2e7c1e2737
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-12-25T21:59:41.597Z'
                  updatedAt: '2024-02-24T01:35:37.524Z'
  /admin/users/me:
    get:
      tags:
        - admin > users
      summary: get loggedin User
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Todd Stroman
                  email: Sarina72@yahoo.com
                  role: indexing
                  companyId: 64caf403f905eb2e7c1e2732
                  mobileNo: (773) 264-7502
                  username: Ila.Labadie
                  userType: 1
                  id: 64caf403f905eb2e7c1e273c
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-12-25T21:59:41.597Z'
                  updatedAt: '2024-02-24T01:35:37.524Z'
  /admin/users/create:
    post:
      tags:
        - admin > users
      summary: addusers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Todd Stroman
                email: Sarina72@yahoo.com
                password: a7aiKCLt3dWo91J
                role: indexing
                companyId: 64caf403f905eb2e7c1e2732
                mobileNo: (773) 264-7502
                username: Ila.Labadie
                userType: 1
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Todd Stroman
                  email: Sarina72@yahoo.com
                  role: indexing
                  companyId: 64caf403f905eb2e7c1e2732
                  mobileNo: (773) 264-7502
                  username: Ila.Labadie
                  userType: 1
                  id: 64caf403f905eb2e7c1e2734
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-12-25T21:59:41.597Z'
                  updatedAt: '2024-02-24T01:35:37.524Z'
  /admin/users/addBulk:
    post:
      tags:
        - admin > users
      summary: insertBulkusers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - name: Todd Stroman
                    email: Sarina72@yahoo.com
                    password: a7aiKCLt3dWo91J
                    role: indexing
                    companyId: 64caf403f905eb2e7c1e2732
                    mobileNo: (773) 264-7502
                    username: Ila.Labadie
                    userType: 1
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/users/list:
    post:
      tags:
        - admin > users
      summary: findAllusers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - name: Todd Stroman
                      email: Sarina72@yahoo.com
                      role: indexing
                      companyId: 64caf403f905eb2e7c1e2732
                      mobileNo: (773) 264-7502
                      username: Ila.Labadie
                      userType: 1
                      id: 64caf403f905eb2e7c1e2736
                      isDeleted: false
                      isActive: true
                      createdAt: '2023-12-25T21:59:41.597Z'
                      updatedAt: '2024-02-24T01:35:37.524Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /admin/users/count:
    post:
      tags:
        - admin > users
      summary: getusersCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /admin/users/deleteMany:
    post:
      tags:
        - admin > users
      summary: deleteManyusers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/users/update/{id}:
    put:
      tags:
        - admin > users
      summary: updateusers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Todd Stroman
                email: Sarina72@yahoo.com
                password: a7aiKCLt3dWo91J
                role: indexing
                companyId: 64caf403f905eb2e7c1e2732
                mobileNo: (773) 264-7502
                username: Ila.Labadie
                userType: 1
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Todd Stroman
                  email: Sarina72@yahoo.com
                  role: indexing
                  companyId: 64caf403f905eb2e7c1e2732
                  mobileNo: (773) 264-7502
                  username: Ila.Labadie
                  userType: 1
                  id: 64caf403f905eb2e7c1e2738
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-12-25T21:59:41.597Z'
                  updatedAt: '2024-02-24T01:35:37.524Z'
  /admin/users/partial-update/{id}:
    put:
      tags:
        - admin > users
      summary: partialupdateusers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Todd Stroman
                  email: Sarina72@yahoo.com
                  role: indexing
                  companyId: 64caf403f905eb2e7c1e2732
                  mobileNo: (773) 264-7502
                  username: Ila.Labadie
                  userType: 1
                  id: 64caf403f905eb2e7c1e2739
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-12-25T21:59:41.597Z'
                  updatedAt: '2024-02-24T01:35:37.524Z'
  /admin/users/updateBulk:
    put:
      tags:
        - admin > users
      summary: updateBulkusers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/users/softDelete/{id}:
    put:
      tags:
        - admin > users
      summary: softDeleteusers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/users/softDeleteMany:
    put:
      tags:
        - admin > users
      summary: softDeleteManyusers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/users/update-profile:
    put:
      tags:
        - admin > users
      summary: updateProfile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Todd Stroman
                email: Sarina72@yahoo.com
                password: a7aiKCLt3dWo91J
                role: indexing
                companyId: 64caf403f905eb2e7c1e2732
                mobileNo: (773) 264-7502
                username: Ila.Labadie
                userType: 1
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Todd Stroman
                  email: Sarina72@yahoo.com
                  role: indexing
                  companyId: 64caf403f905eb2e7c1e2732
                  mobileNo: (773) 264-7502
                  username: Ila.Labadie
                  userType: 1
                  id: 64caf403f905eb2e7c1e273b
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-12-25T21:59:41.597Z'
                  updatedAt: '2024-02-24T01:35:37.524Z'
  /admin/users/delete/{id}:
    delete:
      tags:
        - admin > users
      summary: deleteusers
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /admin/auth/login:
    post:
      tags:
        - admin > login
      summary: Login in admin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: username
                password: password
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Login Successful
                data:
                  name: Todd Stroman
                  email: Sarina72@yahoo.com
                  role: indexing
                  companyId: 64caf403f905eb2e7c1e2732
                  mobileNo: (773) 264-7502
                  username: Ila.Labadie
                  id: 64caf403f905eb2e7c1e273d
                  loginRetryLimit: 0
                  token: >-
                    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxMWRlZDVjMGFjMjAxMmFjMDI4ODkxZiIsInVzZXJuYW1lIjoiYWRtaW4iLCJpYXQiOjE2MjkzNTEyNzAsImV4cCI6MTYyOTk1MTI3MH0.BJ-WKjNYeFDQ4pn8kfli5gwn6GLz_c3voFht20Agj9k
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-04-25T04:32:16.357Z'
                  updatedAt: '2023-11-18T11:41:30.940Z'
  /admin/auth/register:
    post:
      tags:
        - admin > login
      summary: Register User in admin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Todd Stroman
                email: Sarina72@yahoo.com
                password: a7aiKCLt3dWo91J
                role: indexing
                companyId: 64caf403f905eb2e7c1e2732
                mobileNo: (773) 264-7502
                username: Ila.Labadie
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Todd Stroman
                  email: Sarina72@yahoo.com
                  role: indexing
                  companyId: 64caf403f905eb2e7c1e2732
                  mobileNo: (773) 264-7502
                  username: Ila.Labadie
                  id: 64caf403f905eb2e7c1e273d
                  loginRetryLimit: 0
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-04-25T04:32:16.357Z'
                  updatedAt: '2023-11-18T11:41:30.940Z'
  /admin/auth/forgot-password:
    post:
      tags:
        - admin > login
      summary: Forgot Password in admin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: yourmail@gmail.com
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: otp successfully send to your email.
                data: {}
  /admin/auth/validate-otp:
    post:
      tags:
        - admin > login
      summary: Validate OTP in admin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                otp: '5898'
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Invalid OTP
                data: {}
  /admin/auth/logout:
    post:
      tags:
        - admin > login
      summary: Logout in admin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/users/change-password:
    put:
      tags:
        - admin > login
      summary: Change Password in admin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                oldPassword: OldPassword
                newPassword: NewPassword
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Password changed successfully
                data: {}
  /admin/auth/reset-password:
    put:
      tags:
        - admin > login
      summary: Reset password in admin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                code: '5898'
                newPassword: yourPassword
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Password reset successfully
                data: {}
  /admin/role/{id}:
    get:
      tags:
        - admin > role
      summary: getrole
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Andrew Luettgen III
                  code: yellow
                  weight: 80
                  id: 64caf403f905eb2e7c1e2751
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-06-07T23:59:57.793Z'
                  updatedAt: '2023-09-12T23:23:23.571Z'
  /admin/role/create:
    post:
      tags:
        - admin > role
      summary: addrole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Andrew Luettgen III
                code: yellow
                weight: 80
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Andrew Luettgen III
                  code: yellow
                  weight: 80
                  id: 64caf403f905eb2e7c1e274b
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-06-07T23:59:57.793Z'
                  updatedAt: '2023-09-12T23:23:23.571Z'
  /admin/role/addBulk:
    post:
      tags:
        - admin > role
      summary: insertBulkrole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - name: Andrew Luettgen III
                    code: yellow
                    weight: 80
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/role/list:
    post:
      tags:
        - admin > role
      summary: findAllrole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - name: Andrew Luettgen III
                      code: yellow
                      weight: 80
                      id: 64caf403f905eb2e7c1e274d
                      isDeleted: false
                      isActive: true
                      createdAt: '2024-06-07T23:59:57.793Z'
                      updatedAt: '2023-09-12T23:23:23.571Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /admin/role/count:
    post:
      tags:
        - admin > role
      summary: getroleCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /admin/role/deleteMany:
    post:
      tags:
        - admin > role
      summary: deleteManyrole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/role/updateBulk:
    put:
      tags:
        - admin > role
      summary: updateBulkrole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/role/softDeleteMany:
    put:
      tags:
        - admin > role
      summary: softDeleteManyrole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/role/softDelete/{id}:
    put:
      tags:
        - admin > role
      summary: softDeleterole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/role/partial-update/{id}:
    put:
      tags:
        - admin > role
      summary: partialupdaterole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Andrew Luettgen III
                  code: yellow
                  weight: 80
                  id: 64caf403f905eb2e7c1e274f
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-06-07T23:59:57.793Z'
                  updatedAt: '2023-09-12T23:23:23.571Z'
  /admin/role/update/{id}:
    put:
      tags:
        - admin > role
      summary: updaterole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Andrew Luettgen III
                code: yellow
                weight: 80
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Andrew Luettgen III
                  code: yellow
                  weight: 80
                  id: 64caf403f905eb2e7c1e2750
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-06-07T23:59:57.793Z'
                  updatedAt: '2023-09-12T23:23:23.571Z'
  /admin/role/delete/{id}:
    delete:
      tags:
        - admin > role
      summary: deleterole
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /admin/projectroute/{id}:
    get:
      tags:
        - admin > projectRoute
      summary: getprojectRoute
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  route_name: Paradigm
                  method: Steel
                  uri: analyzer
                  id: 64caf403f905eb2e7c1e2759
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-11-06T17:25:02.161Z'
                  updatedAt: '2023-09-13T23:53:59.568Z'
  /admin/projectroute/create:
    post:
      tags:
        - admin > projectRoute
      summary: addprojectRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                route_name: Paradigm
                method: Steel
                uri: analyzer
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  route_name: Paradigm
                  method: Steel
                  uri: analyzer
                  id: 64caf403f905eb2e7c1e2753
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-11-06T17:25:02.161Z'
                  updatedAt: '2023-09-13T23:53:59.568Z'
  /admin/projectroute/addBulk:
    post:
      tags:
        - admin > projectRoute
      summary: insertBulkprojectRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - route_name: Paradigm
                    method: Steel
                    uri: analyzer
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/projectroute/list:
    post:
      tags:
        - admin > projectRoute
      summary: findAllprojectRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - route_name: Paradigm
                      method: Steel
                      uri: analyzer
                      id: 64caf403f905eb2e7c1e2755
                      isDeleted: false
                      isActive: true
                      createdAt: '2023-11-06T17:25:02.161Z'
                      updatedAt: '2023-09-13T23:53:59.568Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /admin/projectroute/count:
    post:
      tags:
        - admin > projectRoute
      summary: getprojectRouteCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /admin/projectroute/deleteMany:
    post:
      tags:
        - admin > projectRoute
      summary: deleteManyprojectRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/projectroute/updateBulk:
    put:
      tags:
        - admin > projectRoute
      summary: updateBulkprojectRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/projectroute/softDeleteMany:
    put:
      tags:
        - admin > projectRoute
      summary: softDeleteManyprojectRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/projectroute/softDelete/{id}:
    put:
      tags:
        - admin > projectRoute
      summary: softDeleteprojectRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/projectroute/partial-update/{id}:
    put:
      tags:
        - admin > projectRoute
      summary: partialupdateprojectRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  route_name: Paradigm
                  method: Steel
                  uri: analyzer
                  id: 64caf403f905eb2e7c1e2757
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-11-06T17:25:02.161Z'
                  updatedAt: '2023-09-13T23:53:59.568Z'
  /admin/projectroute/update/{id}:
    put:
      tags:
        - admin > projectRoute
      summary: updateprojectRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                route_name: Paradigm
                method: Steel
                uri: analyzer
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  route_name: Paradigm
                  method: Steel
                  uri: analyzer
                  id: 64caf403f905eb2e7c1e2758
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-11-06T17:25:02.161Z'
                  updatedAt: '2023-09-13T23:53:59.568Z'
  /admin/projectroute/delete/{id}:
    delete:
      tags:
        - admin > projectRoute
      summary: deleteprojectRoute
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /admin/routerole/{id}:
    get:
      tags:
        - admin > routeRole
      summary: getrouteRole
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  routeId: 64caf403f905eb2e7c1e275a
                  roleId: 64caf403f905eb2e7c1e275b
                  id: 64caf403f905eb2e7c1e2763
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-08-26T23:07:32.140Z'
                  updatedAt: '2024-07-21T04:47:40.956Z'
  /admin/routerole/create:
    post:
      tags:
        - admin > routeRole
      summary: addrouteRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                routeId: 64caf403f905eb2e7c1e275a
                roleId: 64caf403f905eb2e7c1e275b
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  routeId: 64caf403f905eb2e7c1e275a
                  roleId: 64caf403f905eb2e7c1e275b
                  id: 64caf403f905eb2e7c1e275d
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-08-26T23:07:32.140Z'
                  updatedAt: '2024-07-21T04:47:40.956Z'
  /admin/routerole/addBulk:
    post:
      tags:
        - admin > routeRole
      summary: insertBulkrouteRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - routeId: 64caf403f905eb2e7c1e275a
                    roleId: 64caf403f905eb2e7c1e275b
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/routerole/list:
    post:
      tags:
        - admin > routeRole
      summary: findAllrouteRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - routeId: 64caf403f905eb2e7c1e275a
                      roleId: 64caf403f905eb2e7c1e275b
                      id: 64caf403f905eb2e7c1e275f
                      isDeleted: false
                      isActive: true
                      createdAt: '2023-08-26T23:07:32.140Z'
                      updatedAt: '2024-07-21T04:47:40.956Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /admin/routerole/count:
    post:
      tags:
        - admin > routeRole
      summary: getrouteRoleCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /admin/routerole/deleteMany:
    post:
      tags:
        - admin > routeRole
      summary: deleteManyrouteRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/routerole/updateBulk:
    put:
      tags:
        - admin > routeRole
      summary: updateBulkrouteRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/routerole/softDeleteMany:
    put:
      tags:
        - admin > routeRole
      summary: softDeleteManyrouteRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/routerole/softDelete/{id}:
    put:
      tags:
        - admin > routeRole
      summary: softDeleterouteRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/routerole/partial-update/{id}:
    put:
      tags:
        - admin > routeRole
      summary: partialupdaterouteRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  routeId: 64caf403f905eb2e7c1e275a
                  roleId: 64caf403f905eb2e7c1e275b
                  id: 64caf403f905eb2e7c1e2761
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-08-26T23:07:32.140Z'
                  updatedAt: '2024-07-21T04:47:40.956Z'
  /admin/routerole/update/{id}:
    put:
      tags:
        - admin > routeRole
      summary: updaterouteRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                routeId: 64caf403f905eb2e7c1e275a
                roleId: 64caf403f905eb2e7c1e275b
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  routeId: 64caf403f905eb2e7c1e275a
                  roleId: 64caf403f905eb2e7c1e275b
                  id: 64caf403f905eb2e7c1e2762
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-08-26T23:07:32.140Z'
                  updatedAt: '2024-07-21T04:47:40.956Z'
  /admin/routerole/delete/{id}:
    delete:
      tags:
        - admin > routeRole
      summary: deleterouteRole
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /admin/userrole/{id}:
    get:
      tags:
        - admin > userRole
      summary: getuserRole
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  userId: 64caf403f905eb2e7c1e2764
                  roleId: 64caf403f905eb2e7c1e2765
                  id: 64caf403f905eb2e7c1e276d
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-09-29T22:06:39.914Z'
                  updatedAt: '2024-04-28T16:55:31.864Z'
  /admin/userrole/create:
    post:
      tags:
        - admin > userRole
      summary: adduserRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                userId: 64caf403f905eb2e7c1e2764
                roleId: 64caf403f905eb2e7c1e2765
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  userId: 64caf403f905eb2e7c1e2764
                  roleId: 64caf403f905eb2e7c1e2765
                  id: 64caf403f905eb2e7c1e2767
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-09-29T22:06:39.914Z'
                  updatedAt: '2024-04-28T16:55:31.864Z'
  /admin/userrole/addBulk:
    post:
      tags:
        - admin > userRole
      summary: insertBulkuserRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - userId: 64caf403f905eb2e7c1e2764
                    roleId: 64caf403f905eb2e7c1e2765
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/userrole/list:
    post:
      tags:
        - admin > userRole
      summary: findAlluserRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - userId: 64caf403f905eb2e7c1e2764
                      roleId: 64caf403f905eb2e7c1e2765
                      id: 64caf403f905eb2e7c1e2769
                      isDeleted: false
                      isActive: true
                      createdAt: '2023-09-29T22:06:39.914Z'
                      updatedAt: '2024-04-28T16:55:31.864Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /admin/userrole/count:
    post:
      tags:
        - admin > userRole
      summary: getuserRoleCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /admin/userrole/deleteMany:
    post:
      tags:
        - admin > userRole
      summary: deleteManyuserRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/userrole/updateBulk:
    put:
      tags:
        - admin > userRole
      summary: updateBulkuserRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/userrole/softDeleteMany:
    put:
      tags:
        - admin > userRole
      summary: softDeleteManyuserRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/userrole/softDelete/{id}:
    put:
      tags:
        - admin > userRole
      summary: softDeleteuserRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /admin/userrole/partial-update/{id}:
    put:
      tags:
        - admin > userRole
      summary: partialupdateuserRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  userId: 64caf403f905eb2e7c1e2764
                  roleId: 64caf403f905eb2e7c1e2765
                  id: 64caf403f905eb2e7c1e276b
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-09-29T22:06:39.914Z'
                  updatedAt: '2024-04-28T16:55:31.864Z'
  /admin/userrole/update/{id}:
    put:
      tags:
        - admin > userRole
      summary: updateuserRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                userId: 64caf403f905eb2e7c1e2764
                roleId: 64caf403f905eb2e7c1e2765
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  userId: 64caf403f905eb2e7c1e2764
                  roleId: 64caf403f905eb2e7c1e2765
                  id: 64caf403f905eb2e7c1e276c
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-09-29T22:06:39.914Z'
                  updatedAt: '2024-04-28T16:55:31.864Z'
  /admin/userrole/delete/{id}:
    delete:
      tags:
        - admin > userRole
      summary: deleteuserRole
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/reports/{id}:
    get:
      tags:
        - client > reports
      summary: getreports
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  conversationId: 64caf403f905eb2e7c1e26e7
                  profileName: Singapore
                  userPhone: neutral
                  description: Mexico
                  reportType: Plastic
                  media: invoice
                  evidenceID: Pants
                  plate: Gorgeous
                  date: '2024-05-12T09:38:44.869Z'
                  riskMatrix: 513
                  count: 531
                  driverId: 64caf403f905eb2e7c1e26e8
                  vehicleId: 64caf403f905eb2e7c1e26e9
                  companyId: 64caf403f905eb2e7c1e26ea
                  address: 40177 Stamm Forges
                  id: 64caf403f905eb2e7c1e26f4
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-02-12T17:30:27.599Z'
                  updatedAt: '2024-03-08T14:11:40.715Z'
  /client/api/v1/reports/list:
    post:
      tags:
        - client > reports
      summary: findAllreports
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - conversationId: 64caf403f905eb2e7c1e26e7
                      profileName: Singapore
                      userPhone: neutral
                      description: Mexico
                      reportType: Plastic
                      media: invoice
                      evidenceID: Pants
                      plate: Gorgeous
                      date: '2024-05-12T09:38:44.869Z'
                      riskMatrix: 513
                      count: 531
                      driverId: 64caf403f905eb2e7c1e26e8
                      vehicleId: 64caf403f905eb2e7c1e26e9
                      companyId: 64caf403f905eb2e7c1e26ea
                      address: 40177 Stamm Forges
                      id: 64caf403f905eb2e7c1e26f3
                      isDeleted: false
                      isActive: true
                      createdAt: '2024-02-12T17:30:27.599Z'
                      updatedAt: '2024-03-08T14:11:40.715Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/reports/count:
    post:
      tags:
        - client > reports
      summary: getreportsCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/upload:
    post:
      tags:
        - client > File Upload
      summary: File upload in client
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: string
                  description: Select file/s to upload
                  format: binary
                folder:
                  type: string
                  description: Optional, enable to upload file to specific folder
                  example: Enter foldername
                fileName:
                  type: string
                  description: Optional, enable to give Specific file name to uploaded File
                  example: Enter fileName
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  - status: true
                    path: path to download file
  /client/api/v1/vehicles/{id}:
    get:
      tags:
        - client > vehicles
      summary: getvehicles
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  brand: Avon
                  model: Granite
                  year: 545
                  color: green
                  plate: Alley
                  vin: override
                  stickerID: Plain
                  companyId: 64caf403f905eb2e7c1e26f5
                  driverId: 64caf403f905eb2e7c1e26f6
                  id: 64caf403f905eb2e7c1e2702
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-07-24T03:29:40.267Z'
                  updatedAt: '2023-10-27T21:49:54.209Z'
  /client/api/v1/vehicles/create:
    post:
      tags:
        - client > vehicles
      summary: addvehicles
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                brand: Avon
                model: Granite
                year: 545
                color: green
                plate: Alley
                vin: override
                stickerID: Plain
                companyId: 64caf403f905eb2e7c1e26f5
                driverId: 64caf403f905eb2e7c1e26f6
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  brand: Avon
                  model: Granite
                  year: 545
                  color: green
                  plate: Alley
                  vin: override
                  stickerID: Plain
                  companyId: 64caf403f905eb2e7c1e26f5
                  driverId: 64caf403f905eb2e7c1e26f6
                  id: 64caf403f905eb2e7c1e26ff
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-07-24T03:29:40.267Z'
                  updatedAt: '2023-10-27T21:49:54.209Z'
  /client/api/v1/vehicles/addBulk:
    post:
      tags:
        - client > vehicles
      summary: insertBulkvehicles
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - brand: Avon
                    model: Granite
                    year: 545
                    color: green
                    plate: Alley
                    vin: override
                    stickerID: Plain
                    companyId: 64caf403f905eb2e7c1e26f5
                    driverId: 64caf403f905eb2e7c1e26f6
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/vehicles/list:
    post:
      tags:
        - client > vehicles
      summary: findAllvehicles
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - brand: Avon
                      model: Granite
                      year: 545
                      color: green
                      plate: Alley
                      vin: override
                      stickerID: Plain
                      companyId: 64caf403f905eb2e7c1e26f5
                      driverId: 64caf403f905eb2e7c1e26f6
                      id: 64caf403f905eb2e7c1e2701
                      isDeleted: false
                      isActive: true
                      createdAt: '2024-07-24T03:29:40.267Z'
                      updatedAt: '2023-10-27T21:49:54.209Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/vehicles/count:
    post:
      tags:
        - client > vehicles
      summary: getvehiclesCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/vehicles/deleteMany:
    post:
      tags:
        - client > vehicles
      summary: deleteManyvehicles
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/vehicles/update/{id}:
    put:
      tags:
        - client > vehicles
      summary: updatevehicles
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                brand: Avon
                model: Granite
                year: 545
                color: green
                plate: Alley
                vin: override
                stickerID: Plain
                companyId: 64caf403f905eb2e7c1e26f5
                driverId: 64caf403f905eb2e7c1e26f6
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  brand: Avon
                  model: Granite
                  year: 545
                  color: green
                  plate: Alley
                  vin: override
                  stickerID: Plain
                  companyId: 64caf403f905eb2e7c1e26f5
                  driverId: 64caf403f905eb2e7c1e26f6
                  id: 64caf403f905eb2e7c1e2703
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-07-24T03:29:40.267Z'
                  updatedAt: '2023-10-27T21:49:54.209Z'
  /client/api/v1/vehicles/partial-update/{id}:
    put:
      tags:
        - client > vehicles
      summary: partialupdatevehicles
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  brand: Avon
                  model: Granite
                  year: 545
                  color: green
                  plate: Alley
                  vin: override
                  stickerID: Plain
                  companyId: 64caf403f905eb2e7c1e26f5
                  driverId: 64caf403f905eb2e7c1e26f6
                  id: 64caf403f905eb2e7c1e2704
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-07-24T03:29:40.267Z'
                  updatedAt: '2023-10-27T21:49:54.209Z'
  /client/api/v1/vehicles/updateBulk:
    put:
      tags:
        - client > vehicles
      summary: updateBulkvehicles
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/vehicles/softDelete/{id}:
    put:
      tags:
        - client > vehicles
      summary: softDeletevehicles
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/vehicles/softDeleteMany:
    put:
      tags:
        - client > vehicles
      summary: softDeleteManyvehicles
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/vehicles/delete/{id}:
    delete:
      tags:
        - client > vehicles
      summary: deletevehicles
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/companies/{id}:
    get:
      tags:
        - client > companies
      summary: getcompanies
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  companyName: optical
                  registrationNumber: maroon
                  email: Jan88@gmail.com
                  phone: (545) 937-0777
                  website: optical
                  address: 5496 Ulices Burgs
                  otherData: Concrete
                  userId: 64caf403f905eb2e7c1e2706
                  id: 64caf403f905eb2e7c1e2712
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-11-03T23:56:19.597Z'
                  updatedAt: '2024-07-02T06:57:05.333Z'
  /client/api/v1/companies/create:
    post:
      tags:
        - client > companies
      summary: addcompanies
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                companyName: optical
                registrationNumber: maroon
                email: Jan88@gmail.com
                phone: (545) 937-0777
                website: optical
                address: 5496 Ulices Burgs
                otherData: Concrete
                userId: 64caf403f905eb2e7c1e2706
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  companyName: optical
                  registrationNumber: maroon
                  email: Jan88@gmail.com
                  phone: (545) 937-0777
                  website: optical
                  address: 5496 Ulices Burgs
                  otherData: Concrete
                  userId: 64caf403f905eb2e7c1e2706
                  id: 64caf403f905eb2e7c1e270f
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-11-03T23:56:19.597Z'
                  updatedAt: '2024-07-02T06:57:05.333Z'
  /client/api/v1/companies/addBulk:
    post:
      tags:
        - client > companies
      summary: insertBulkcompanies
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - companyName: optical
                    registrationNumber: maroon
                    email: Jan88@gmail.com
                    phone: (545) 937-0777
                    website: optical
                    address: 5496 Ulices Burgs
                    otherData: Concrete
                    userId: 64caf403f905eb2e7c1e2706
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/companies/list:
    post:
      tags:
        - client > companies
      summary: findAllcompanies
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - companyName: optical
                      registrationNumber: maroon
                      email: Jan88@gmail.com
                      phone: (545) 937-0777
                      website: optical
                      address: 5496 Ulices Burgs
                      otherData: Concrete
                      userId: 64caf403f905eb2e7c1e2706
                      id: 64caf403f905eb2e7c1e2711
                      isDeleted: false
                      isActive: true
                      createdAt: '2023-11-03T23:56:19.597Z'
                      updatedAt: '2024-07-02T06:57:05.333Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/companies/count:
    post:
      tags:
        - client > companies
      summary: getcompaniesCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/companies/deleteMany:
    post:
      tags:
        - client > companies
      summary: deleteManycompanies
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/companies/update/{id}:
    put:
      tags:
        - client > companies
      summary: updatecompanies
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                companyName: optical
                registrationNumber: maroon
                email: Jan88@gmail.com
                phone: (545) 937-0777
                website: optical
                address: 5496 Ulices Burgs
                otherData: Concrete
                userId: 64caf403f905eb2e7c1e2706
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  companyName: optical
                  registrationNumber: maroon
                  email: Jan88@gmail.com
                  phone: (545) 937-0777
                  website: optical
                  address: 5496 Ulices Burgs
                  otherData: Concrete
                  userId: 64caf403f905eb2e7c1e2706
                  id: 64caf403f905eb2e7c1e2713
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-11-03T23:56:19.597Z'
                  updatedAt: '2024-07-02T06:57:05.333Z'
  /client/api/v1/companies/partial-update/{id}:
    put:
      tags:
        - client > companies
      summary: partialupdatecompanies
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  companyName: optical
                  registrationNumber: maroon
                  email: Jan88@gmail.com
                  phone: (545) 937-0777
                  website: optical
                  address: 5496 Ulices Burgs
                  otherData: Concrete
                  userId: 64caf403f905eb2e7c1e2706
                  id: 64caf403f905eb2e7c1e2714
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-11-03T23:56:19.597Z'
                  updatedAt: '2024-07-02T06:57:05.333Z'
  /client/api/v1/companies/updateBulk:
    put:
      tags:
        - client > companies
      summary: updateBulkcompanies
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/companies/softDelete/{id}:
    put:
      tags:
        - client > companies
      summary: softDeletecompanies
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/companies/softDeleteMany:
    put:
      tags:
        - client > companies
      summary: softDeleteManycompanies
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/companies/delete/{id}:
    delete:
      tags:
        - client > companies
      summary: deletecompanies
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/conversations/{id}:
    get:
      tags:
        - client > conversations
      summary: getconversations
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  sender: Planner
                  profileName: Bolivar
                  step: 917
                  isCompleted: false
                  companyId: 64caf403f905eb2e7c1e2716
                  id: 64caf403f905eb2e7c1e2720
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-07-14T02:17:06.251Z'
                  updatedAt: '2024-06-25T06:23:31.051Z'
  /client/api/v1/conversations/list:
    post:
      tags:
        - client > conversations
      summary: findAllconversations
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - sender: Planner
                      profileName: Bolivar
                      step: 917
                      isCompleted: false
                      companyId: 64caf403f905eb2e7c1e2716
                      id: 64caf403f905eb2e7c1e271f
                      isDeleted: false
                      isActive: true
                      createdAt: '2024-07-14T02:17:06.251Z'
                      updatedAt: '2024-06-25T06:23:31.051Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/conversations/count:
    post:
      tags:
        - client > conversations
      summary: getconversationsCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/drivers/{id}:
    get:
      tags:
        - client > drivers
      summary: getdrivers
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  driverId: Wyoming
                  name: Brett Bartoletti V
                  age: 11
                  licenseNumber: Officer
                  riskMatrix: 9
                  vehicleId: 64caf403f905eb2e7c1e2721
                  companyId: 64caf403f905eb2e7c1e2722
                  birthDate: '2024-04-09T21:56:25.031Z'
                  licenseExpiration: '2024-03-18T08:26:34.944Z'
                  id: 64caf403f905eb2e7c1e272e
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-04-06T19:29:00.570Z'
                  updatedAt: '2024-07-02T01:41:03.504Z'
  /client/drivers/mostDriver:
    get:
      tags:
        - client > drivers
      summary: getmostdrivers
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  driverId: Wyoming
                  name: Brett Bartoletti V
                  age: 11
                  licenseNumber: Officer
                  riskMatrix: 9
                  vehicleId: 64caf403f905eb2e7c1e2721
                  companyId: 64caf403f905eb2e7c1e2722
                  birthDate: '2024-04-09T21:56:25.031Z'
                  licenseExpiration: '2024-03-18T08:26:34.944Z'
                  id: 64caf403f905eb2e7c1e2727
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-07-28T10:45:11.406Z'
                  updatedAt: '2024-06-06T05:06:16.870Z'
  /client/api/v1/drivers/create:
    post:
      tags:
        - client > drivers
      summary: adddrivers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                driverId: Wyoming
                name: Brett Bartoletti V
                age: 11
                licenseNumber: Officer
                riskMatrix: 9
                vehicleId: 64caf403f905eb2e7c1e2721
                companyId: 64caf403f905eb2e7c1e2722
                birthDate: '2024-04-09T21:56:25.031Z'
                licenseExpiration: '2024-03-18T08:26:34.944Z'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  driverId: Wyoming
                  name: Brett Bartoletti V
                  age: 11
                  licenseNumber: Officer
                  riskMatrix: 9
                  vehicleId: 64caf403f905eb2e7c1e2721
                  companyId: 64caf403f905eb2e7c1e2722
                  birthDate: '2024-04-09T21:56:25.031Z'
                  licenseExpiration: '2024-03-18T08:26:34.944Z'
                  id: 64caf403f905eb2e7c1e272b
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-04-06T19:29:00.570Z'
                  updatedAt: '2024-07-02T01:41:03.504Z'
  /client/api/v1/drivers/addBulk:
    post:
      tags:
        - client > drivers
      summary: insertBulkdrivers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - driverId: Wyoming
                    name: Brett Bartoletti V
                    age: 11
                    licenseNumber: Officer
                    riskMatrix: 9
                    vehicleId: 64caf403f905eb2e7c1e2721
                    companyId: 64caf403f905eb2e7c1e2722
                    birthDate: '2024-04-09T21:56:25.031Z'
                    licenseExpiration: '2024-03-18T08:26:34.944Z'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/drivers/list:
    post:
      tags:
        - client > drivers
      summary: findAlldrivers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - driverId: Wyoming
                      name: Brett Bartoletti V
                      age: 11
                      licenseNumber: Officer
                      riskMatrix: 9
                      vehicleId: 64caf403f905eb2e7c1e2721
                      companyId: 64caf403f905eb2e7c1e2722
                      birthDate: '2024-04-09T21:56:25.031Z'
                      licenseExpiration: '2024-03-18T08:26:34.944Z'
                      id: 64caf403f905eb2e7c1e272d
                      isDeleted: false
                      isActive: true
                      createdAt: '2024-04-06T19:29:00.570Z'
                      updatedAt: '2024-07-02T01:41:03.504Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/drivers/count:
    post:
      tags:
        - client > drivers
      summary: getdriversCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/drivers/deleteMany:
    post:
      tags:
        - client > drivers
      summary: deleteManydrivers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isWarning: true
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/drivers/update/{id}:
    put:
      tags:
        - client > drivers
      summary: updatedrivers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                driverId: Wyoming
                name: Brett Bartoletti V
                age: 11
                licenseNumber: Officer
                riskMatrix: 9
                vehicleId: 64caf403f905eb2e7c1e2721
                companyId: 64caf403f905eb2e7c1e2722
                birthDate: '2024-04-09T21:56:25.031Z'
                licenseExpiration: '2024-03-18T08:26:34.944Z'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  driverId: Wyoming
                  name: Brett Bartoletti V
                  age: 11
                  licenseNumber: Officer
                  riskMatrix: 9
                  vehicleId: 64caf403f905eb2e7c1e2721
                  companyId: 64caf403f905eb2e7c1e2722
                  birthDate: '2024-04-09T21:56:25.031Z'
                  licenseExpiration: '2024-03-18T08:26:34.944Z'
                  id: 64caf403f905eb2e7c1e272f
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-04-06T19:29:00.570Z'
                  updatedAt: '2024-07-02T01:41:03.504Z'
  /client/api/v1/drivers/partial-update/{id}:
    put:
      tags:
        - client > drivers
      summary: partialupdatedrivers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  driverId: Wyoming
                  name: Brett Bartoletti V
                  age: 11
                  licenseNumber: Officer
                  riskMatrix: 9
                  vehicleId: 64caf403f905eb2e7c1e2721
                  companyId: 64caf403f905eb2e7c1e2722
                  birthDate: '2024-04-09T21:56:25.031Z'
                  licenseExpiration: '2024-03-18T08:26:34.944Z'
                  id: 64caf403f905eb2e7c1e2730
                  isDeleted: false
                  isActive: true
                  createdAt: '2024-04-06T19:29:00.570Z'
                  updatedAt: '2024-07-02T01:41:03.504Z'
  /client/api/v1/drivers/updateBulk:
    put:
      tags:
        - client > drivers
      summary: updateBulkdrivers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  isActive: true
                data:
                  isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/drivers/softDelete/{id}:
    put:
      tags:
        - client > drivers
      summary: softDeletedrivers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/drivers/softDeleteMany:
    put:
      tags:
        - client > drivers
      summary: softDeleteManydrivers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ids:
                  - ':id'
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 2
  /client/api/v1/drivers/delete/{id}:
    delete:
      tags:
        - client > drivers
      summary: deletedrivers
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  Count: 1
  /client/api/v1/users/{id}:
    get:
      tags:
        - client > users
      summary: getusers
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Todd Stroman
                  email: Sarina72@yahoo.com
                  role: indexing
                  companyId: 64caf403f905eb2e7c1e2732
                  mobileNo: (773) 264-7502
                  username: Ila.Labadie
                  userType: 1
                  id: 64caf403f905eb2e7c1e2740
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-09-13T21:33:56.173Z'
                  updatedAt: '2024-05-27T05:17:31.544Z'
  /client/api/v1/users/me:
    get:
      tags:
        - client > users
      summary: get loggedin User
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Todd Stroman
                  email: Sarina72@yahoo.com
                  role: indexing
                  companyId: 64caf403f905eb2e7c1e2732
                  mobileNo: (773) 264-7502
                  username: Ila.Labadie
                  userType: 1
                  id: 64caf403f905eb2e7c1e2744
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-09-13T21:33:56.173Z'
                  updatedAt: '2024-05-27T05:17:31.544Z'
  /client/api/v1/users/create:
    post:
      tags:
        - client > users
      summary: addusers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Todd Stroman
                email: Sarina72@yahoo.com
                password: a7aiKCLt3dWo91J
                role: indexing
                companyId: 64caf403f905eb2e7c1e2732
                mobileNo: (773) 264-7502
                username: Ila.Labadie
                userType: 1
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Todd Stroman
                  email: Sarina72@yahoo.com
                  role: indexing
                  companyId: 64caf403f905eb2e7c1e2732
                  mobileNo: (773) 264-7502
                  username: Ila.Labadie
                  userType: 1
                  id: 64caf403f905eb2e7c1e273e
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-09-13T21:33:56.173Z'
                  updatedAt: '2024-05-27T05:17:31.544Z'
  /client/api/v1/users/list:
    post:
      tags:
        - client > users
      summary: findAllusers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                query: {}
                options:
                  select:
                    - field 1
                    - field 2
                  collation: ''
                  sort: ''
                  populate: ''
                  projection: ''
                  lean: false
                  leanWithId: true
                  offset: 0
                  page: 1
                  limit: 10
                  pagination: true
                  useEstimatedCount: false
                  useCustomCountFn: false
                  forceCountFn: false
                  read: {}
                  options: {}
                isCountOnly: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  data:
                    - name: Todd Stroman
                      email: Sarina72@yahoo.com
                      role: indexing
                      companyId: 64caf403f905eb2e7c1e2732
                      mobileNo: (773) 264-7502
                      username: Ila.Labadie
                      userType: 1
                      id: 64caf403f905eb2e7c1e273f
                      isDeleted: false
                      isActive: true
                      createdAt: '2023-09-13T21:33:56.173Z'
                      updatedAt: '2024-05-27T05:17:31.544Z'
                  paginator:
                    itemCount: 1
                    offset: 0
                    perPage: 10
                    pageCount: 1
                    currentPage: 1
                    slNo: 1
                    hasPrevPage: false
                    hasNextPage: false
                    prev: null
                    next: null
  /client/api/v1/users/count:
    post:
      tags:
        - client > users
      summary: getusersCount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                where:
                  isActive: true
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  count: 10
  /client/api/v1/users/update/{id}:
    put:
      tags:
        - client > users
      summary: updateusers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Todd Stroman
                email: Sarina72@yahoo.com
                password: a7aiKCLt3dWo91J
                role: indexing
                companyId: 64caf403f905eb2e7c1e2732
                mobileNo: (773) 264-7502
                username: Ila.Labadie
                userType: 1
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Todd Stroman
                  email: Sarina72@yahoo.com
                  role: indexing
                  companyId: 64caf403f905eb2e7c1e2732
                  mobileNo: (773) 264-7502
                  username: Ila.Labadie
                  userType: 1
                  id: 64caf403f905eb2e7c1e2741
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-09-13T21:33:56.173Z'
                  updatedAt: '2024-05-27T05:17:31.544Z'
  /client/api/v1/users/partial-update/{id}:
    put:
      tags:
        - client > users
      summary: partialupdateusers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isActive: true
                isDeleted: false
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Todd Stroman
                  email: Sarina72@yahoo.com
                  role: indexing
                  companyId: 64caf403f905eb2e7c1e2732
                  mobileNo: (773) 264-7502
                  username: Ila.Labadie
                  userType: 1
                  id: 64caf403f905eb2e7c1e2742
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-09-13T21:33:56.173Z'
                  updatedAt: '2024-05-27T05:17:31.544Z'
  /client/api/v1/users/update-profile:
    put:
      tags:
        - client > users
      summary: updateProfile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Todd Stroman
                email: Sarina72@yahoo.com
                password: a7aiKCLt3dWo91J
                role: indexing
                companyId: 64caf403f905eb2e7c1e2732
                mobileNo: (773) 264-7502
                username: Ila.Labadie
                userType: 1
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Todd Stroman
                  email: Sarina72@yahoo.com
                  role: indexing
                  companyId: 64caf403f905eb2e7c1e2732
                  mobileNo: (773) 264-7502
                  username: Ila.Labadie
                  userType: 1
                  id: 64caf403f905eb2e7c1e2743
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-09-13T21:33:56.173Z'
                  updatedAt: '2024-05-27T05:17:31.544Z'
  /client/auth/login:
    post:
      tags:
        - client > login
      summary: Login in client
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: username
                password: password
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Login Successful
                data:
                  name: Todd Stroman
                  email: Sarina72@yahoo.com
                  role: indexing
                  companyId: 64caf403f905eb2e7c1e2732
                  mobileNo: (773) 264-7502
                  username: Ila.Labadie
                  id: 64caf403f905eb2e7c1e2745
                  loginRetryLimit: 0
                  token: >-
                    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxMWRlZDVjMGFjMjAxMmFjMDI4ODkxZiIsInVzZXJuYW1lIjoiYWRtaW4iLCJpYXQiOjE2MjkzNTEyNzAsImV4cCI6MTYyOTk1MTI3MH0.BJ-WKjNYeFDQ4pn8kfli5gwn6GLz_c3voFht20Agj9k
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-11-19T14:38:11.170Z'
                  updatedAt: '2023-09-18T04:58:39.171Z'
  /client/auth/register:
    post:
      tags:
        - client > login
      summary: Register User in client
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Todd Stroman
                email: Sarina72@yahoo.com
                password: a7aiKCLt3dWo91J
                role: indexing
                companyId: 64caf403f905eb2e7c1e2732
                mobileNo: (773) 264-7502
                username: Ila.Labadie
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Your request is successfully executed
                data:
                  name: Todd Stroman
                  email: Sarina72@yahoo.com
                  role: indexing
                  companyId: 64caf403f905eb2e7c1e2732
                  mobileNo: (773) 264-7502
                  username: Ila.Labadie
                  id: 64caf403f905eb2e7c1e2745
                  loginRetryLimit: 0
                  isDeleted: false
                  isActive: true
                  createdAt: '2023-11-19T14:38:11.170Z'
                  updatedAt: '2023-09-18T04:58:39.171Z'
  /client/auth/forgot-password:
    post:
      tags:
        - client > login
      summary: Forgot Password in client
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: yourmail@gmail.com
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: otp successfully send to your email.
                data: {}
  /client/auth/validate-otp:
    post:
      tags:
        - client > login
      summary: Validate OTP in client
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                otp: '5898'
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Invalid OTP
                data: {}
  /client/auth/logout:
    post:
      tags:
        - client > login
      summary: Logout in client
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /client/api/v1/users/change-password:
    put:
      tags:
        - client > login
      summary: Change Password in client
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                oldPassword: OldPassword
                newPassword: NewPassword
      security:
        - bearerAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Password changed successfully
                data: {}
  /client/auth/reset-password:
    put:
      tags:
        - client > login
      summary: Reset password in client
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                code: '5898'
                newPassword: yourPassword
      security:
        - undefinedAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                status: SUCCESS
                message: Password reset successfully
                data: {}
